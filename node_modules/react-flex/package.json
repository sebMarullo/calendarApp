{
  "_args": [
    [
      {
        "raw": "react-flex@2.2.7",
        "scope": null,
        "escapedName": "react-flex",
        "name": "react-flex",
        "rawSpec": "2.2.7",
        "spec": "2.2.7",
        "type": "version"
      },
      "C:\\Users\\sebastian\\Desktop\\MyShop\\Shops\\calendarApp\\node_modules\\react-date-picker"
    ]
  ],
  "_from": "react-flex@2.2.7",
  "_id": "react-flex@2.2.7",
  "_inCache": true,
  "_location": "/react-flex",
  "_nodeVersion": "4.3.0",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/react-flex-2.2.7.tgz_1467981717975_0.05602130223996937"
  },
  "_npmUser": {
    "name": "zippyui",
    "email": "contact@zippyui.com"
  },
  "_npmVersion": "2.14.12",
  "_phantomChildren": {},
  "_requested": {
    "raw": "react-flex@2.2.7",
    "scope": null,
    "escapedName": "react-flex",
    "name": "react-flex",
    "rawSpec": "2.2.7",
    "spec": "2.2.7",
    "type": "version"
  },
  "_requiredBy": [
    "/react-date-picker"
  ],
  "_resolved": "https://registry.npmjs.org/react-flex/-/react-flex-2.2.7.tgz",
  "_shasum": "5c84e6c3affcbdc366edde4088f8d07303318fa8",
  "_shrinkwrap": null,
  "_spec": "react-flex@2.2.7",
  "_where": "C:\\Users\\sebastian\\Desktop\\MyShop\\Shops\\calendarApp\\node_modules\\react-date-picker",
  "author": {
    "name": "Radu Brehar"
  },
  "bugs": {
    "url": "https://github.com/zippyui/react-flex/issues"
  },
  "dependencies": {
    "object-assign": "^4.0.1",
    "react-class": "^2.0.0"
  },
  "description": "",
  "devDependencies": {
    "autoprefixer-loader": "^3.1.0",
    "babel-cli": "^6.7.5",
    "babel-core": "^6.1.4",
    "babel-loader": "^6.1.0",
    "babel-preset-es2015": "^6.1.4",
    "babel-preset-react": "^6.1.4",
    "css-loader": "^0.21.0",
    "extract-text-webpack-plugin": "^0.9.1",
    "node-sass": "^3.4.2",
    "react": ">=0.14.0 || >=15.0.0-0",
    "react-dom": ">=0.14.0 || >=15.0.0-0",
    "react-field": "^1.3.0",
    "react-slide": "^0.2.2",
    "sass-loader": "^3.1.2",
    "style-loader": "^0.13.0",
    "webpack": "^1.12.9",
    "webpack-dev-server": "^1.12.1"
  },
  "directories": {},
  "dist": {
    "shasum": "5c84e6c3affcbdc366edde4088f8d07303318fa8",
    "tarball": "https://registry.npmjs.org/react-flex/-/react-flex-2.2.7.tgz"
  },
  "gitHead": "8db641e11fa21d2e42276a88a50be02c4084a92f",
  "homepage": "https://github.com/zippyui/react-flex#readme",
  "license": "MIT",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "bogdanpetru",
      "email": "bogdanpintican@gmail.com"
    },
    {
      "name": "radubrehar",
      "email": "radu@evanghelic.ro"
    },
    {
      "name": "zippyui",
      "email": "contact@zippyui.com"
    }
  ],
  "name": "react-flex",
  "optionalDependencies": {},
  "peerDependencies": {
    "react": ">=0.14.0 || >=15.0.0-0",
    "react-dom": ">=0.14.0 || >=15.0.0-0"
  },
  "readme": "# react-flex\n\n\n > Flex component built for React\n\n## Install\n\n```sh\n$ npm i react-flex --save\n```\n\n## Key features\n\n * **support for React 15.2.0**\n * no worries about browser prefixing for older browsers\n * props similar to css properties, so basically almost no learning curve\n\n## Usage\n\n```jsx\nimport { Flex, Item } from 'react-flex';\nimport 'react-flex/index.css';\n\n<Flex row alignItems=\"center\">\n  <div>a first div</div>\n  <Item flex={1}>flexes to 1</Item>\n</Flex>\n```\n\n**DONT FORGET to import `react-flex/index.css`** as well.\n\n## Motivation\n\nIdeally, we could write `<div style={{flex: 1}} />`, but the browser landscape has to catch up with prefixing, latest syntax, etc.\n\nSo instead, `<Item flex={2} />` adds a `className` on the rendered item. Since you are also importing `react-flex/index.css`, you get a all the cross-browser syntax and prefixing that `autoprefixer` offers.\n\n## Props\n\nThere are two components in the `react-flex` module: `Flex` and `Item`. They both support `flex` as a prop.\n\n### Flex\n\n * `inline: Boolean` - for `display: inline-flex`.\n * `row: Boolean` - for `flex-direction: row`. Defaults to `true`\n * `column: Boolean` - for `flex-direction: column`\n * `reverse: Boolean` - for reverse direction (eg. `flex-direction:  column-reverse or row-reverse`)\n * `wrap: Boolean` - for `flex-wrap: wrap`. Defaults to true.\n * `flex: Number/String/Boolean` - a number/string from 0 to *24* for the `flex` css property. `false` for `none`.\n * `alignItems: String` - a value for the `align-items` css property.\n * `justifyContent: String` - a value for the `justify-content` css property.\n * `alignContent: String` - a value for the `align-content` css property.\n * `display: String` - you can customize the display to be `'flex'` or `'inline-flex'`\n\nThe `Flex` component has the following default props (which `Item` does not):\n\n * `row=true`\n * `wrap=true`\n * `alignItems='center'`\n * `display='flex'`\n\nOur experience shows those are the most common configs, so we made them the defaults.\n\n### Item\n\n* any of the above\n* `flex: Number/String/Boolean` - a number/string from 0 to *24* for the `flex` css property. `false` for `none`. Defaults to `1`.\n* `flexGrow: Number/Boolean/String` - a number/string from 0 to *24* for `flex-grow`. Most of the times, using `flex` is just enough.\n* `flexShrink: Number/String` - a value for the `flex-shrink` css property. From `0` to *`24`*.\n* `flexBasis: String` - a value for the `flex-basis` css property. Valid values are: `0` (and `'none'`, which is the same), `'auto'`, `'content'`, `'fit-content'`, `'min-content'`, `'max-content'`, `'fit'`.\n\n\n## Examples\n\n```jsx\n\n<Flex alignItems=\"start\"> //or \"flex-start\"\n  <Item flex={2}>\n    content here\n  </Item>\n</Flex>\n\n<Flex column wrap={false}>\n  <Flex flex={false}>\n    Flex also supports the `flex` prop\n  </Flex>\n  <Item flex={3} />\n  <Item flex={12} />\n</Flex>\n```\n\n## Development\n\n```sh\n$ git clone https://github.com/zippyui/react-flex.git\n$ npm i\n$ npm run dev\n```\n\n## Changelog\n\n### New in 2.1.0\n\n * Make `scss` variable `$REACT-FLEX_MAX-SIZE` default to `100` instead of `24`\n\n### New in 2.0.1\n\n * Add support for `alignSelf`\n\n### New in 2.0.0\n\n * Add support for React `15.0.0` in `peerDependecies`\n * Modify class names - remove all `react-flex-item` classes & add BEM convention\n * Add `display` prop to `Flex` & `Item`. In this way, you can make even flex `Item` have display flex or inline-flex\n * Make `scss` variable `$REACT-FLEX_MAX-SIZE` take previously defined value if one exists.\n\n\n## Other\n\nIf you wish to use `index.scss`, you can import that directly.\n\nNow navigate to [http://localhost:8181/dev.html](http://localhost:8181/dev.html), modify index.jsx and see the changes happen live in the browser.\n## License\n\n#### MIT\n\n\n\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/zippyui/react-flex.git"
  },
  "scripts": {
    "build": "npm run lib && npm run build-style && npm run build-index",
    "build-index": "NODE_ENV=production webpack -p --config ./build/index.config.js",
    "build-style": "webpack --config ./build/style.config.js",
    "dev": "webpack-dev-server --progress --colors --config ./build/dev.config.js",
    "dist": "webpack --config ./build/build.config.js",
    "lib": "rm -fr lib && babel --out-dir lib src",
    "prepublish": "npm run build"
  },
  "version": "2.2.7"
}
